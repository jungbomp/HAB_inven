{"version":3,"sources":["App.js","packingStatusView.js","salesBySkuView.js","notfound.js","serviceWorker.js","index.js"],"names":["App","className","desc","a","b","orderBy","headCells","id","align","disablePadding","label","EnhancedTableHead","props","classes","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","map","headCell","TableCell","key","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","Tooltip","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","position","top","Notfound","Boolean","window","location","hostname","match","routing","exact","path","component","React","useState","rows","setRows","Date","selectedDateFr","setSelectedDateFr","selectedDateTo","setSelectedDateTo","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","converDateFormat","yyyymmdd","console","log","yyyy","slice","mm","dd","getData","fileDownloadYn","orderDateFr","getFullYear","getMonth","getDate","orderDateTo","fetch","then","results","json","data","emptyRows","Math","min","length","Paper","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","value","onChange","date","KeyboardButtonProps","Button","Table","aria-labelledby","size","target","checked","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","row","hover","tabIndex","ORDER_DATE","CHANNEL_ORDER_NO","STD_SKU","PRODUCT_NAME","MARKET_NAME","EMPLOYEE_NAME","NO_ITEM_YN","TAG_CHANGE_YN","SHIPPING_STATUS","PROC_DT","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","TOTAL_ORDER_CNT","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b68caaf9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DoneOutlineRoundedIcon from \"@material-ui/icons/DoneOutlineRounded\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"orderDate\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"Order Date\"\n  },\n  { id: \"orderNo\", align: \"center\", disablePadding: false, label: \"Order #\" },\n  { id: \"sku\", align: \"left\", disablePadding: false, label: \"SKU\" },\n  {\n    id: \"productName\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Product Name\"\n  },\n  {\n    id: \"marketplace\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Marketplace\"\n  },\n  {\n    id: \"employee\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Employee\"\n  },\n  {\n    id: \"noItem\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"No Item\"\n  },\n  {\n    id: \"tagChange\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Tag Change\"\n  },\n  {\n    id: \"fulfilledDate\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"Fulfilled Date\"\n  }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell> */}\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Packing Status\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n            {/* getData(); */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [rows, setRows] = React.useState([]);\n  const [selectedDateFr, setSelectedDateFr] = React.useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      // const newSelecteds = rows.map(n => n.name);\n      // setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    console.log(\"curPage: \" + newPage);\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    console.log(\"handleChangeRowsPerPage\");\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const handleDateChangeFr = date => {\n    setSelectedDateFr(date);\n  };\n\n  const handleDateChangeTo = date => {\n    setSelectedDateTo(date);\n  };\n\n  const converDateFormat = yyyymmdd => {\n    console.log(yyyymmdd)\n    const MMM = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"Jun\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sep\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n\n    const yyyy = yyyymmdd.slice(0, 4);\n    const mm = yyyymmdd.slice(4, 6);\n    const dd = yyyymmdd.slice(-2);\n\n    return `${MMM[mm]} ${dd}, ${yyyy}`;\n  };\n\n  \n  const getData = (fileDownloadYn) => {\n    const orderDateFr =  `${selectedDateFr.getFullYear()}${(\"0\" + (selectedDateFr.getMonth() + 1)).slice(-2)}${(\"0\" + selectedDateFr.getDate()).slice(-2)}`;\n    const orderDateTo =  `${selectedDateTo.getFullYear()}${(\"0\" + (selectedDateTo.getMonth() + 1)).slice(-2)}${(\"0\" + selectedDateTo.getDate()).slice(-2)}`;\n    fetch(\n      `/order/statistic/packing_status?order_date_fr=${orderDateFr}&order_date_to=${orderDateTo}&file_download=${fileDownloadYn || 'N'}`\n    )\n      .then(results => {\n        console.log(results);\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        setRows(data);\n      });\n    // const data = rows;\n    // setRows(data);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"flex-end\">\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-fr\"\n              label=\"Order Date From\"\n              value={selectedDateFr}\n              onChange={handleDateChangeFr}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\"\n              }}\n            />\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-to\"\n              label=\"Order Date To\"\n              value={selectedDateTo}\n              onChange={handleDateChangeTo}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\"\n              }}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={getData}>\n              Search\n            </Button>\n            <Button variant=\"contained\" onClick={() => getData(\"Y\")}>\n              Download\n            </Button>\n          </Grid>\n        </MuiPickersUtilsProvider>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.name);\n                  // const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      // onClick={event => handleClick(event, row.name)}\n                      // role=\"checkbox\"\n                      // aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      // selected={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell> */}\n                      <TableCell align=\"center\">\n                        {converDateFormat(row.ORDER_DATE)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {row.CHANNEL_ORDER_NO}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.STD_SKU}</TableCell>\n                      <TableCell align=\"left\">{row.PRODUCT_NAME}</TableCell>\n                      <TableCell align=\"center\">{row.MARKET_NAME}</TableCell>\n                      <TableCell align=\"center\">{row.EMPLOYEE_NAME}</TableCell>\n                      <TableCell align=\"center\">\n                        <DoneOutlineRoundedIcon\n                          color={\n                            row.NO_ITEM_YN === \"Y\" ? \"primary\" : \"disabled\"\n                          }\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <DoneOutlineRoundedIcon\n                          color={\n                            row.TAG_CHANGE_YN === \"Y\" ? \"primary\" : \"disabled\"\n                          }\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {\"01\" === row.SHIPPING_STATUS\n                          ? `${converDateFormat(row.PROC_DT)}`\n                          : \"\"}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DoneOutlineRoundedIcon from \"@material-ui/icons/DoneOutlineRounded\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  {\n    id: \"orderDate\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"Order Date\"\n  },\n  {\n    id: \"standardSku\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"Standard SKU\"\n  },\n  {\n    id: \"productName\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Product Name\" \n  },\n  {\n    id: \"totalOrder\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Total Order\"\n  },\n  {\n    id: \"habAmazon\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"HAB Amazon Order\"\n  },\n  {\n    id: \"habSears\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"HAB Sears Order\"\n  },\n  {\n    id: \"habWalmart\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"HAB Walmart Order\"\n  },\n  {\n    id: \"habShopify\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"HAB Website Order\"\n  },\n  {\n    id: \"mxAmazon\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"MX Amazon Order\"\n  },\n  {\n    id: \"mxEbay\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"MX eBay Order\"\n  },\n  {\n    id: \"mxWalmart\",\n    align: \"center\",\n    disablePadding: true,\n    label: \"MX Walmart Order\"\n  },\n  {\n    id: \"habEbay\",\n    align: \"center\",\n    disablePadding: false,\n    label: \"Skyhigh eBay Order\"\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell> */}\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Sales By SKU\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [rows, setRows] = React.useState([]);\n  const [selectedDateFr, setSelectedDateFr] = React.useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date());\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      // const newSelecteds = rows.map(n => n.name);\n      // setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    console.log(\"curPage: \" + newPage);\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    console.log(\"handleChangeRowsPerPage\");\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const handleDateChangeFr = date => {\n    setSelectedDateFr(date);\n  };\n\n  const handleDateChangeTo = date => {\n    setSelectedDateTo(date);\n  };\n\n  const converDateFormat = yyyymmdd => {\n    console.log(yyyymmdd)\n    const MMM = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"Jun\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sep\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n\n    const yyyy = yyyymmdd.slice(0, 4);\n    const mm = yyyymmdd.slice(4, 6);\n    const dd = yyyymmdd.slice(-2);\n\n    return `${MMM[mm]} ${dd}, ${yyyy}`;\n  };\n\n  \n  const getData = (fileDownloadYn) => {\n    const orderDateFr =  `${selectedDateFr.getFullYear()}${(\"0\" + (selectedDateFr.getMonth() + 1)).slice(-2)}${(\"0\" + selectedDateFr.getDate()).slice(-2)}`;\n    const orderDateTo =  `${selectedDateTo.getFullYear()}${(\"0\" + (selectedDateTo.getMonth() + 1)).slice(-2)}${(\"0\" + selectedDateTo.getDate()).slice(-2)}`;\n    fetch(`/order/statistic/sales_by_sku?order_date_fr=${orderDateFr}&order_date_to=${orderDateTo}&file_download=${fileDownloadYn || 'N'}`)\n      .then(results => {\n        console.log(results);\n        return results.json();\n      })\n      .then(data => {\n        console.log(data);\n        setRows(data);\n      });\n    // const data = rows;\n    // setRows(data);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"flex-end\">\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-fr\"\n              label=\"Order Date From\"\n              value={selectedDateFr}\n              onChange={handleDateChangeFr}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\"\n              }}\n            />\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-to\"\n              label=\"Order Date To\"\n              value={selectedDateTo}\n              onChange={handleDateChangeTo}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\"\n              }}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={getData}>\n              Search\n            </Button>\n            <Button variant=\"contained\" onClick={() => getData(\"Y\")}>\n              Download\n            </Button>\n          </Grid>\n        </MuiPickersUtilsProvider>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.name);\n                  // const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      // onClick={event => handleClick(event, row.name)}\n                      // role=\"checkbox\"\n                      // aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      // selected={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell> */}\n                      <TableCell align=\"center\">{converDateFormat(row.ORDER_DATE)}</TableCell>\n                      <TableCell align=\"left\">{row.STD_SKU}</TableCell>\n                      <TableCell align=\"left\">{row.PRODUCT_NAME}</TableCell>\n                      <TableCell align=\"right\">{row.TOTAL_ORDER_CNT}</TableCell>\n                      <TableCell align=\"right\">{row[1] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[8] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[2] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[3] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[4] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[5] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[6] || 0}</TableCell>\n                      <TableCell align=\"right\">{row[7] || 0}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React from 'react'\nconst Notfound = () => <h1>Not found</h1>\nexport default Notfound","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport PackingStatusView from \"./packingStatusView\";\nimport SalesBySKUView from \"./salesBySkuView\";\nimport Notfound from \"./notfound\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n    <Router>\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/packing_status_view\" component={PackingStatusView} />\n                <Route path=\"/sales_by_sku_view\" component={SalesBySKUView} />\n                <Route component={Notfound} />\n            </Switch>\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}